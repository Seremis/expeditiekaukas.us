
/**
 * Called when the google maps api code has loaded (happens async). This initializes a map with the muted blue style.
 */
function initMap() {
    var styledMapType = new google.maps.StyledMapType([{"featureType":"all","stylers":[{"saturation":0},{"hue":"#e7ecf0"}]},{"featureType":"road","stylers":[{"saturation":-70}]},{"featureType":"transit","stylers":[{"visibility":"off"}]},{"featureType":"poi","stylers":[{"visibility":"off"}]},{"featureType":"water","stylers":[{"visibility":"simplified"},{"saturation":-60}]}], {name: "{{ mapslayoutName}}"});

    var mapProp= {
        center:new google.maps.LatLng(39.6006623,45.7051961),
        zoom:7,
        mapTypeControlOptions: {
            mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain',
                'styled_map']
        }
    };

    var map=new google.maps.Map(document.getElementById("map"),mapProp);

    map.mapTypes.set('styled_map', styledMapType);
    map.setMapTypeId('styled_map');

    var infowindow = new google.maps.InfoWindow();


    loadRoutes(map, infowindow);
}

function loadRoutes(map, infowindow) {
    console.log("Loading people...")
    getPeople(
        successCallback = function(data) {
            console.log("Loading people succeeded!")

            var bounds = new google.maps.LatLngBounds();

            $.each( data.people, function(key, val) {
                console.log("Requesting route for " + val);

                getRoute(val,
                    successCallback = function(data) {
                        console.log("Loading route for " + data.personName + " succeeded!");

                        drawRouteOnMap(map, bounds, infowindow, data);
                    },
                    errorCallback = function() {
                        alert("{{ errorLoadingTryAgain }}")
                    }
                );
            });

            $('#mapLoadingOverlay').hide();
        },
        errorCallback = function () {
            alert("{{ errorLoadingTryAgain }}")
        }
    );
}


function getPeople(successCallback, errorCallback) {
    $.getJSON({
        url: "https://expeditiekaukas.us/api/person",
        success: successCallback,
        error: errorCallback
    });
}

function getRoute(personName, successCallback, errorCallback) {
    $.getJSON({
        url: "https://expeditiekaukas.us/api/route/" + personName,
        success: successCallback,
        error: errorCallback
    });
}

function drawRouteOnMap(map, bounds, infowindow, json) {
    var personName = json.personName;
    var lastSeenStamp = json.lastUpdateTime;
    var lastSeenZoneOffset = json.lastUpdateTimezoneOffset;
    var route = json.route;

    console.log(personName + " route length: " + route.length);

    var polyline = new google.maps.Polyline({
        strokeColor: getColor(),
        strokeOpacity: 1.0,
        strokeWeight: 3
    });

    var lastLocation = null;

    for(var i = 0; i < route.length; i++) {
        var location = new google.maps.LatLng(route[i].lat, route[i].lon)

        polyline.getPath().push(location);
        bounds.extend(location)

        lastLocation = location;
    }

    if(lastLocation != null) {
        var marker = new google.maps.Marker({
            position: lastLocation,
            icon: {
                path: google.maps.SymbolPath.BACKWARD_CLOSED_ARROW,
                scale: 5
            },
            draggable: false,
            map: map
        });

        marker.addListener('click', function() {
            var contentString =
                '<div id="content">'+
                '<h1>' + personName + '</h1>'+
                '<div id="bodyContent">'+
                '<p>{{ lastseen }}: ' + formatDate(new Date(lastSeenStamp)) + '</p>'+
                '</div>'+
                '</div>';

            infowindow.setContent(contentString);
            infowindow.open(map, marker);
        });
    }

    polyline.setMap(map);
    map.fitBounds(bounds);
}

function formatDate(d) {
    Number.prototype.padLeft = function(base,chr){
        var  len = (String(base || 10).length - String(this).length)+1;
        return len > 0? new Array(len).join(chr || '0')+this : this;
    }

    return [    d.getDate().padLeft(),
                (d.getMonth()+1).padLeft(),
                d.getFullYear()
                ].join('/') +' ' +
                [d.getHours().padLeft(),
                d.getMinutes().padLeft(),
                d.getSeconds().padLeft()].join(':');
}

var colors = [
    '#FFDC00',
    '#2ECC40',
    '#ff0000',
    '#85144b',
    '#3D9970'
]

function getColor() {
    return colors.pop();
}
